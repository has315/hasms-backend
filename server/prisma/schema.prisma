generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["hasms_product", "hasms_order", "hasms_basket", "hasms_discount", "hasms_catalogue", "hasms_tag", "hasms_user", "hasms_locations", "hasms_inventory"]
}

model Category {
  id             Int           @id @default(autoincrement())
  created_at     DateTime      @default(now())
  updated_at     DateTime      @updatedAt
  name           String?
  catalogue_id   Int?
  product        Product[]
  sub_categories Subcategory[]

  @@schema("hasms_product")
}

model Subcategory {
  id          Int       @id @default(autoincrement())
  name        String?
  category_id Int
  category    Category  @relation(fields: [category_id], references: [id])
  product     Product[] @relation("ProductToSubcategory")

  @@schema("hasms_product")
}

model Order {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@schema("hasms_order")
}

model Basket {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@schema("hasms_basket")
}

model Color {
  id                  Int                   @id @default(autoincrement())
  created_at          DateTime?             @default(now())
  updated_at          DateTime?             @updatedAt
  name                String
  value               String
  ProductColorVariant ProductColorVariant[]

  @@schema("hasms_product")
}

model Discount {
  id                        Int      @id @default(autoincrement())
  created_at                DateTime @default(now())
  updated_at                DateTime @updatedAt
  discount_valid            Boolean
  discount_valid_until      DateTime @default(now())
  discount_percentage_value String
  discount_amount_value     String
  discounted_product_value  String
  discount_type             String

  @@schema("hasms_discount")
}

model Product {
  id               Int                @id @default(autoincrement())
  created_at       DateTime           @default(now())
  updated_at       DateTime           @updatedAt
  name             String
  description      String?
  manufacturer     String?
  image            String?
  currency         String             @default("BAM")
  size             String
  price            Float
  category_id      Int?
  sub_category_id  Int?
  category         Category?          @relation(fields: [category_id], references: [id])
  sub_category     Subcategory?       @relation("ProductToSubcategory", fields: [sub_category_id], references: [id])
  related_product  RelatedProduct?    @relation("RelatedProduct")
  variants         Variant[]
  ProductInventory ProductInventory[]

  @@index([name, category_id, sub_category_id])
  @@schema("hasms_product")
}

model RelatedProduct {
  related_product_id Int     @id
  related_product    Product @relation("RelatedProduct", fields: [related_product_id], references: [id])

  @@schema("hasms_product")
}

model Variant {
  id                     Int                   @id @default(autoincrement())
  product_id             Int
  name                   String
  product_color_variants ProductColorVariant[]
  product                Product               @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@schema("hasms_product")
}

model ProductInventory {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  available  Boolean  @default(false)
  quantity   Int      @default(0)
  product    Product? @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  product_id Int

  @@schema("hasms_inventory")
}

model ProductColorVariant {
  id         Int      @id @default(autoincrement())
  variant_id Int?
  name       String
  image      String?
  color_id    Int?
  color      Color?   @relation(fields: [color_id], references: [id])
  variant    Variant? @relation(fields: [variant_id], references: [id])

  @@schema("hasms_product")
}

model Catalogue {
  id    Int    @id @default(autoincrement())
  name  String
  image String
  type  String

  @@schema("hasms_catalogue")
}

model Tag {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  color      String

  @@schema("hasms_tag")
}

model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  name  String

  @@schema("hasms_user")
}

model Location {
  id         Int     @id @default(autoincrement())
  name       String
  address1   String?
  address2   String?
  city       String
  country    String
  zip_number String

  @@schema("hasms_locations")
}
